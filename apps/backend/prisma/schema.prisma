// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  OPEN
  IN_PROGRESS
  DONE
}

enum Role {
  ADMIN
  USER
}

model User {
  id             Int     @id @default(autoincrement())
  authSchId      String //Ez majd a belepeshez kell
  email          String  @unique
  profilePicture String?
  groups         GroupMembers[]
  events         Event[]
}

model Group {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  members     GroupMembers[]
  events      Event[]
}

model GroupMembers {
  groupId Int
  userId  Int
  role    Role @default(USER)

  @@id([groupId, userId])
  Group   Group @relation(fields: [groupId], references: [id])
  User    User  @relation(fields: [userId], references: [id])
}

model Event {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  date         DateTime @default(now())
  priority     Priority
  status       Status
  categoryId   Int
  category     Category @relation(fields: [categoryId], references: [id])
  ownerUserId  Int?
  ownerUser    User?    @relation(fields: [ownerUserId], references: [id], onDelete: Cascade)
  ownerGroupId Int?
  ownerGroup   Group?   @relation(fields: [ownerGroupId], references: [id], onDelete: Cascade)
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  events      Event[]
}
